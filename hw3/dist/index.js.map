{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["console.log(\"TASK1\");\n\ntype Admin = {\n  name: string;\n  permissions: string[];\n};\ntype User = {\n  name: string;\n  email: string;\n};\n\ntype AdminUser = Admin & User;\n\nconsole.log(\"TASK2\");\n\ninterface Car {\n  make: string;\n  model: string;\n  engine: {\n    type: string;\n    horsepower: number;\n  };\n  year?: number;\n}\n\nconst car1 = {\n  make: \"Toyota\",\n  model: \"Camry\",\n  engine: {\n    type: \"V6\",\n    horsepower: 301,\n  },\n  year: 2022,\n};\n\nfunction printInfoCar(car: Car): void {\n  for (let key in car) {\n    const value = car[key as keyof Car];\n    if (typeof value === \"object\" && value !== null) {\n      console.log(`${key}:`);\n      for (let subkey in value) {\n        console.log(`  ${subkey}: ${value[subkey as keyof typeof value]}`);\n      }\n    } else {\n      console.log(`${key}: ${value}`);\n    }\n  }\n}\n\nprintInfoCar(car1);\n\n// function printObject(obj: object): void {\n//   for (let key in obj) {\n//     const value = (obj as any)[key];\n\n//     if (typeof value === \"object\" && value !== null) {\n//       console.log(`${key}:`);\n//       printObject(value);\n//     } else {\n//       console.log(`${key}: ${value}`);\n//     }\n//   }\n// }\n\nconsole.log(\"TASK3\");\n\ninterface Product {\n  name: string;\n  price: number;\n}\ninterface CalculateDiscount {\n  (obj: Product, discount: number): number;\n}\n\nconst calculateDiscount: CalculateDiscount = (product, discount) => {\n  return product.price - (product.price * discount) / 100;\n};\n\nconsole.log(calculateDiscount({ name: \"TV\", price: 100 }, 5));\n\nconsole.log(\"TASK4\");\n\ninterface Employee {\n  name: string;\n  salary: number;\n}\ntype Employees = Employee[];\n\nconst employees: Employees = [\n  { name: \"Alice\", salary: 5000 },\n  { name: \"Bob\", salary: 4000 },\n  { name: \"Charlie\", salary: 4500 },\n];\n\nfunction getSalary(arr: Employees): number[] {\n  return arr.map((employee) => employee.salary);\n}\n\nconsole.log(getSalary(employees));\n\nconsole.log(\"TASK5\");\n\ninterface Person {\n  firstName: string;\n  lastName: string;\n}\ninterface Student extends Person {\n  grade: number;\n}\n\nconst student: Student = {\n  firstName: \"Alik\",\n  lastName: \"Bobik\",\n  grade: 78,\n};\n\nfunction getStudentInfo(student: Student): void {\n  console.log(`${student.lastName} ${student.firstName}: ${student.grade}`);\n}\n\ngetStudentInfo(student);\n\nconsole.log(\"TASK6\");\n\ninterface ConcatStrings {\n  (str1: string, str2: string): string;\n}\n\nconst concatStrings: ConcatStrings = (str1, str2) => {\n  return `${str1} ${str2}`;\n};\n\nconsole.log(concatStrings(student.firstName, student.lastName));\n"]}