{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAEtB,SAAS,cAAc,CACrB,KAAa,EACb,QAAgB,EAChB,WAAmB,CAAC;IAEpB,IAAI,KAAK,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC;QAChC,OAAO,CAAC,CAAC;IACX,CAAC;IAED,OAAO,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACrC,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACpC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACxC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAEtC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAItB,SAAS,SAAS,CAAC,EAAM;IACvB,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE,CAAC;QAC3B,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IACD,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE,CAAC;QAC3B,OAAO,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACpC,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AACpC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;AAE3B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAUtB,MAAM,MAAM,GAAW;IACrB,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE;IACnD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE;IACnD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE;IACrD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE;CACnD,CAAC;AAEF,SAAS,oBAAoB,CAC3B,MAAc,EACd,MAAuB;IAEvB,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AACrD,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAErD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAOtB,MAAM,QAAQ,GAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;AAC9C,MAAM,QAAQ,GAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;AACtD,IAAI,SAAS,GAAc;IACzB,EAAE,EAAE,CAAC;IACL,MAAM,EAAE,CAAC;CACV,CAAC;AAEF,SAAS,WAAW,CAAC,SAAoB,EAAE,OAAoB;IAC7D,MAAM,CAAC,WAAW,EAAE,AAAD,EAAG,OAAO,CAAC,GAAG,OAAO,CAAC;IACzC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC;IACjE,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;AACzD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC","sourcesContent":["console.log(\"TASK 1\");\n\nfunction calculateTotal(\n  price: number,\n  quantity: number,\n  discount: number = 0\n): number {\n  if (price <= 0 || quantity <= 0) {\n    return 0;\n  }\n\n  return price * quantity - discount;\n}\n\nconsole.log(calculateTotal(100, 2));\nconsole.log(calculateTotal(100, 2, 20));\nconsole.log(calculateTotal(0, 5, 10));\n\nconsole.log(\"TASK 2\");\n\ntype ID = string | number;\n\nfunction displayId(id: ID): string | number {\n  if (typeof id === \"string\") {\n    return id.toUpperCase();\n  }\n  if (typeof id === \"number\") {\n    return id * 10;\n  }\n  throw new Error(\"Invalid typeof\");\n}\n\nconsole.log(displayId(\"asdasdasd\"));\nconsole.log(displayId(12));\n\nconsole.log(\"TASK 3\");\n\ninterface Order {\n  orderId: string;\n  amount: number;\n  status: \"pending\" | \"shipped\" | \"delivered\";\n}\n\ntype Orders = Order[];\n\nconst orders: Orders = [\n  { orderId: \"A001\", amount: 100, status: \"pending\" },\n  { orderId: \"A002\", amount: 200, status: \"shipped\" },\n  { orderId: \"A003\", amount: 150, status: \"delivered\" },\n  { orderId: \"A004\", amount: 50, status: \"pending\" },\n];\n\nfunction filterOrdersByStatus(\n  orders: Orders,\n  status: Order[\"status\"]\n): Order[] {\n  return orders.filter((order) => order.status === status);\n}\n\nconsole.log(filterOrdersByStatus(orders, \"pending\"));\nconsole.log(filterOrdersByStatus(orders, \"shipped\"));\n\nconsole.log(\"TASK 4\");\n\ntype productInfo = [productName: string, price: number, inStore: number];\ninterface Inventory {\n  [productName: string]: number;\n}\n\nconst product1: productInfo = [\"TV\", 380, 12];\nconst product2: productInfo = [\"SmartWatch\", 380, 12];\nlet inventory: Inventory = {\n  TV: 5,\n  Laptop: 3,\n};\n\nfunction updateStock(inventory: Inventory, product: productInfo) {\n  const [productName, , inStore] = product;\n  inventory[productName] = (inventory[productName] || 0) + inStore;\n  return inventory;\n}\n\nconsole.log(\"Before: \", inventory);\nconsole.log(\"After: \", updateStock(inventory, product1));\nconsole.log(\"Before: \", inventory);\nconsole.log(\"After: \", updateStock(inventory, product2));\n"]}