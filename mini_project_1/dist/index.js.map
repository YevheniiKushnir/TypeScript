{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,2BAA2B,CAAC;AACnC,OAAO,OAA2C,MAAM,SAAS,CAAC;AAClE,OAAO,WAAW,MAAM,mBAAmB,CAAC;AAC5C,OAAO,WAAW,MAAM,6BAA6B,CAAC;AACtD,OAAO,QAAQ,MAAM,0BAA0B,CAAC;AAChD,OAAO,MAAM,MAAM,wBAAwB,CAAC;AAC5C,MAAM,GAAG,GAAgB,OAAO,EAAE,CAAC;AACnC,MAAM,IAAI,GAAoB,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEvD,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEhB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC3C,GAAG,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;AAEnC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAClB,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAErB,KAAK,UAAU,WAAW;IACxB,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC,wCAAwC,IAAI,EAAE,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACzB,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;YAC9C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACH,CAAC;AAED,WAAW,EAAE,CAAC","sourcesContent":["import \"./config/dotenv.config.js\";\nimport express, { Application, Request, Response } from \"express\";\nimport tasksRouter from \"./routes/tasks.js\";\nimport globalError from \"./middleware/globalError.js\";\nimport notFound from \"./middleware/notFound.js\";\nimport logger from \"./middleware/logger.js\";\nconst app: Application = express();\nconst PORT: string | number = process.env.PORT || 3001;\n\napp.use(express.json());\napp.use(logger);\n\napp.get(\"/\", (req: Request, res: Response) => {\n  res.send(\"Hello, TypeScrpt with Express!\");\n});\n\napp.use(\"/api/tasks\", tasksRouter);\n\napp.use(notFound);\napp.use(globalError);\n\nasync function startServer(): Promise<void> {\n  try {\n    const server = app.listen(PORT, () => {\n      console.log(`âœ… Server running on http://localhost:${PORT}`);\n    });\n\n    server.on(\"error\", (err) => {\n      console.error(\"Server failed to start:\", err);\n      process.exit(1);\n    });\n  } catch (error) {\n    console.error(\"Unknow error: \", error);\n    process.exit(1);\n  }\n}\n\nstartServer();\n"]}